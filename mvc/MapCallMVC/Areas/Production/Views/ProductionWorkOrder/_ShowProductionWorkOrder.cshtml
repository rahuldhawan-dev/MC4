@model ProductionWorkOrder
@{
    var isProductionWorkOrder = Model.ProductionWorkDescription.OrderType.Id == OrderType.Indices.PLANT_MAINTENANCE_WORK_ORDER_11;
    var isRoutineWorkOrder = Model.OrderType.Id == OrderType.Indices.ROUTINE_13;

    <div class="field-column fc200">
        <fieldset>
            <legend>Location Information</legend>
            @Html.DisplayFor(x => Model.OperatingCenter.State)
            @Html.DisplayFor(x => x.OperatingCenter)
            @Html.DisplayFor(x => x.PlanningPlant)
            @Html.RenderDisplayTemplate("Facility", @<text>
                @if (Model.Facility != null)
                {
                    @Html.ActionLink(Model.Facility.ToString(), "Show", new { Controller = "Facility", Model.Facility.Id, area = "" })
                }
            </text>)
            @Html.RenderDisplayTemplate("Facility Area", @<text>
                @if (Model.FacilityFacilityArea != null)
                {
                    @Html.ActionLink(Model.FacilityFacilityArea.Display, "ByFacilityId", new { Controller = "FacilityFacilityArea", Model.Facility.Id, area = "" })
                }
            </text>)
            @Html.DisplayFor(x => x.Coordinate)
            @if (!isRoutineWorkOrder)
            {
                @Html.DisplayFor(x => x.EquipmentType)
                if (Model.Equipment != null)
                {
                    @Html.RenderDisplayTemplate("Equipment", @<text>@Html.ActionLink(Model.Equipment.Description, "Show", new { Controller = "Equipment", Model.Equipment.Id, area = "" })</text>)
                }
                else
                {
                    @Html.DisplayFor(x => x.Equipment)
                }
            }

        </fieldset>

        <fieldset>
            <legend>Work Order Details</legend>
            @if (isRoutineWorkOrder)
            {
                @Html.DisplayFor(x => x.LocalTaskDescription)
                @Html.DisplayFor(x => x.MaintenancePlan.TaskDescription)
            }
            else
            {
                @Html.DisplayFor(x => x.ProductionWorkDescription)
                @Html.DisplayFor(x => x.OrderNotes)
                if (Model.ProductionWorkDescription.OrderType.Id == OrderType.Indices.CORRECTIVE_ACTION_20)
                {
                    @Html.DisplayFor(x => x.CorrectiveOrderProblemCode)
                }
                if (Model.CorrectiveOrderProblemCode != null && Model.CorrectiveOrderProblemCode.Id == CorrectiveOrderProblemCode.Indices.OTHER)
                {
                    @Html.DisplayFor(x => x.OtherProblemNotes)
                }
            }
            @Html.DisplayFor(x => x.Priority)
            @Html.DisplayFor(x => x.EstimatedCompletionHours)
            @Html.DisplayFor(x => x.AutoCreatedCorrectiveWorkOrder)

            @if (isRoutineWorkOrder)
            {
                @Html.DisplayFor(x => x.MaintenancePlan.Resources)
                @Html.DisplayFor(x => x.MaintenancePlan.SkillSet)
                @Html.DisplayForIfNotNullOrWhiteSpace(x => x.ProductionWorkOrderFrequency)
                @Html.DisplayFor(x => x.StartDate)
                @Html.DisplayFor(x => x.DueDate)
                @Html.DisplayFor(x => x.DaysOverdue)
            }
            else
            {
                @Html.RenderDisplayTemplate("Prerequisites", @Html.TableFor(x => x.ProductionWorkOrderProductionPrerequisites).ColumnFor(x => x.ProductionPrerequisite, ""))
                if (!isProductionWorkOrder)
                {
                    @Html.DisplayFor(x => x.RequestedBy)
                }
            }
        </fieldset>

        @if (isRoutineWorkOrder)
        {
            <fieldset>
                <legend>Plan Information</legend>
                @Html.RenderDisplayTemplate(
                    "Plan Number",
                    Model.MaintenancePlan != null
                        ? Html.ActionLink(
                            Model.MaintenancePlan.PlanNumber,
                            "Show",
                            new
                            {
                                Controller = "MaintenancePlan",
                                Model.MaintenancePlan.Id,
                                area = "Production"
                            })
                        : MvcHtmlString.Empty)
                @Html.DisplayFor(x => x.MaintenancePlan.Name)
                @Html.DisplayFor(x => x.RequestedBy)
            </fieldset>

            <fieldset>
                <legend>Task Information</legend>
                @Html.DisplayFor(x => x.MaintenancePlan.PlanType)
                @Html.DisplayFor(x => x.MaintenancePlan.TaskGroup)
                @Html.DisplayFor(x => x.MaintenancePlan.TaskDetailsSummary)
                @Html.DisplayFor(x => x.MaintenancePlan.TaskDetails)
                @Html.DisplayFor(x => x.MaintenancePlan.AdditionalTaskDetails)
            </fieldset>
        }

        <fieldset>
            <legend>Status Information</legend>
            @Html.DisplayFor(x => x.WorkOrderStatusDisplayText)
            @if (!isRoutineWorkOrder)
            {
                @Html.DisplayFor(x => x.SAPErrorCode)
            }
            @Html.DisplayFor(x => x.DateReceived)
            @Html.DisplayFor(x => x.DateCompleted)
            @Html.DisplayFor(x => x.CompletedBy)
            @if (!isRoutineWorkOrder)
            {
                @Html.DisplayFor(x => x.ProductionWorkOrderRequiresSupervisorApproval.RequiresSupervisorApproval)
                @Html.DisplayFor(x => x.ApprovedOn)
                @Html.DisplayFor(x => x.ApprovedBy)
            }
            @Html.DisplayFor(x => x.ActualCompletionHours)
            @Html.DisplayFor(x => x.WBSElement)
            @if (!isProductionWorkOrder)
            {
                @Html.RenderDisplayTemplate("Capitalized From", @<text>
                    @if (Model.CapitalizedFrom != null)
                    {
                        @Html.ActionLink(Model.CapitalizedFrom.Id.ToString(), "Show", new { Controller = "ProductionWorkOrder", Model.CapitalizedFrom.Id, area = "Production" })
                    }
                </text>)
            }
            @Html.DisplayFor(x => x.DateCancelled)
            @Html.DisplayFor(x => x.CancellationReason)
        </fieldset>
    </div>
}