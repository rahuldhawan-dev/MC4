@using MapCallMVC.Areas.Production.Models.ViewModels
@model MaintenancePlanForecastResults

@using (Form.BeginForm("AddScheduledAssignments", "MaintenancePlan", "Production"))
{
    @Html.Partial("_AddScheduledAssignmentsFormFields", ViewModelFactory.BuildWithOverrides<CreateScheduledAssignments>(new { Id = Model.MaintenancePlan, OperatingCenter = Model.OperatingCenter }))
    
    <br />
    @Control.Button("Check All").With("onclick", "$('input[name=ScheduledDates]').prop('checked', true)")
    @Control.Button("Uncheck All").With("onclick", "$('input[name=ScheduledDates]').prop('checked', false)")
    <br />

    @(Html.TableFor(x => Model.ForecastWorkOrders, new { id = "forecastAddAssignmentsTable" })
          .TemplateColumnFor(x => Control.CheckBox("ScheduledDates").WithValue(x.PlannedDate))
          .ColumnFor(x => x.PlannedDate)
          .TemplateColumnFor("Scheduled Assignments", x => @<text>
                                                               @if (x.Assignments.Any())
                                                               {
                                                                   <text>
                                                                       @string.Join(", ", x.Assignments)
                                                                   </text>
                                                               }
                                                            </text>)
          .ColumnFor(x => x.LocalTaskDescription)
          .ColumnFor(x => x.SkillSet)
          .ColumnFor(x => x.Resources)
          .ColumnFor(x => x.EstimatedHours)
        )
}