@model FacilityProcess

@{
    var orderedSteps = Model.FacilityProcessSteps.OrderBy(x => x.StepNumber);
    var userCanEdit = Html.CurrentUserCanEditWithOperatingCenter(Model);
}

@if (userCanEdit)
{
    @Control.ActionLink("Add Process Step", "New", "FacilityProcessStep", new { facilityProcessId = Model.Id }).WithCssClass("link-button")
}

@(Html.TableFor(x => orderedSteps, new { id = "facility-process-steps-table" })
        .TemplateColumnFor(x => Control.ActionLink("View", "Show", "FacilityProcessStep", new { id = x.Id, area = "Facilities" }))
        .ColumnFor(x => x.StepNumber)
        .ColumnFor(x => x.Description)
        .ColumnFor(x => x.Equipment)
        .ColumnFor(x => x.FacilityProcessStepSubProcess)
        .ColumnFor(x => x.ProcessTarget)
        .ColumnFor(x => x.NormalRangeMin)
        .ColumnFor(x => x.NormalRangeMax)
        .ColumnFor(x => x.UnitOfMeasure)
        .TemplateColumnFor(x => @<text>
            @using (var f = Form.BeginRouteForm("FacilityProcess", "FacilityProcessStep", new { id = Model.Id }, ManyToManyRouteAction.Remove))
            {
                f.HtmlAttributes["data-confirm"] = "Are you sure you want to remove this facility process step?";
                @Control.HiddenFor(y => x.Id).WithId(null).WithName("FacilityProcessStepId")
                @Control.SubmitButton("Remove")
            }
        </text>).IsVisible(userCanEdit)
)
