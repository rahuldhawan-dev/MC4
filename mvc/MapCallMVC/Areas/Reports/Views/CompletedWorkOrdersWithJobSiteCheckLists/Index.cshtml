@using MapCall.Common.Model.ViewModels
@model MapCallMVC.Areas.FieldOperations.Models.ViewModels.SearchCompletedWorkOrdersWithJobSiteCheckLists
@{
	ActionBarHelper.AddExportLink();
}
@functions {
	IHtmlString GenerateWorkOrderSearchLink(CompletedWorkOrderWithJobSiteCheckListReportItem reportItem, int displayCount, bool? hasJobSiteCheckList)
	{
		if (displayCount <= 0)
		{
			// No point in generating a link to a page with zero results.
			return new HtmlString(displayCount.ToString());
		}
		return Html.ActionLink(displayCount.ToString(), "Index", "GeneralWorkOrder", new RouteValueDictionary {
			{"area", "FieldOperations"},
			{"OperatingCenter", reportItem.OperatingCenterId.ToString()},
			{"WorkDescription", reportItem.WorkDescriptionId.ToString()},
			{"DateCompleted.Start", Model.DateCompleted.Start.ToString()},
			{"DateCompleted.Operator", (int)Model.DateCompleted.Operator},
			{"DateCompleted.End", Model.DateCompleted.End.ToString()},
			{"IsAssignedContractor", Model.IsAssignedContractor},
			{"HasJobSiteCheckLists", hasJobSiteCheckList},
		}, null);
	}
}
@(Html.TableFor(x => x, new { id = "search-results" })
	.ColumnFor(x => x.State)
	.ColumnFor(x => x.OperatingCenter)
	.ColumnFor(x => x.WorkDescription)
	.TemplateColumnFor("Total", x => GenerateWorkOrderSearchLink(x, x.WorkOrderCount, null))
	.TemplateColumnFor("With Job Site Check List", x => GenerateWorkOrderSearchLink(x, x.WorkOrdersWithJobSiteCheckListCount, true))
	.TemplateColumnFor("Without Job Site Check List", x => GenerateWorkOrderSearchLink(x, x.WorkOrdersWithoutJobSiteCheckListCount, false))
	.ColumnFor(x => x.PercentageWithJobSiteCheckList)
)