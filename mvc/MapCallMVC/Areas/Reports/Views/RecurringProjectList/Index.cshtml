@using MMSINC.ClassExtensions
@model SearchRecurringProjectList

@{
    ActionBarHelper.AddExportLink();
}

@(Html.TableFor(x => Model)
    .WithCaption("Records found: " + Model.Count)
    .TemplateColumnFor(x => Html.ActionLink("Show","Show", "RecurringProject", new { id= x.Id, area = "ProjectManagement"},null))
    .SortableColumnFor(x => x.OperatingCenter, "OperatingCenter")
    .SortableColumnFor(x => x.District, "District")
    .SortableColumnFor(x => x.Town, "Town")
    .SortableColumnFor(x => x.EstimatedInServiceDate, "EstimatedInServiceDate")
    .SortableColumnFor(x => x.WBSNumber, "WBSNumber")
    .SortableColumnFor(x => x.ProjectTitle, "ProjectTitle")
    .SortableColumnFor(x => x.NJAWEstimate, "NJAWEstimate")
    .SortableColumnFor(x => x.RecurringProjectType, "RecurringProjectType")
    .SortableColumnFor(x => x.ProposedLength, "ProposedLength")
    .SortableColumnFor(x => x.AssetCategory)
    .ColumnFor(x => x.ProposedDiameter)
    .ColumnFor(x => x.ProposedPipeMaterial)
    .ColumnFor(x => x.DecadeInstalled)
    .ColumnFor(x => x.ExistingDiameter)
    .ColumnFor(x => x.ExistingPipeMaterial)
    .ColumnFor(x => x.AcceleratedAssetInvestmentCategory)
    .ColumnFor(x => x.SecondaryAssetInvestmentCategory)
    .ColumnFor(x => x.Justification)
    .ColumnFor(x => x.EstimatedInServicePeriod)
    .ColumnFor(x => x.FoundationalFilingPeriod)
    .ColumnFor(x => x.Status)
    .ColumnFor(x => x.FinalCriteriaScore)
    .ColumnFor(x => x.FinalRawScore)
    .ColumnFor(x => x.EstimatedVariableScore)
    .ColumnFor(x => x.EstimatedPriorityWeightedScore)
    .ColumnFor(x => x.RequiresScoring)
    .ColumnFor(x => x.CreatedBy)
    .SortableColumnFor(x => x.ActualInServiceDate, "ActualInServiceDate")
    .ColumnFor(x => x.Coordinate.Latitude)
    .ColumnFor(x => x.Coordinate.Longitude)
    .ColumnFor(x => x.RegulatoryStatus)
    .ColumnFor(x => x.OverrideInfoMasterDecision)
    .ColumnFor(x => x.OverrideInfoMasterReason)
    .ColumnFor(x => x.OverrideInfoMasterJustification)
    .ColumnFor(x => x.TotalInfoMasterScore)
    .ColumnFor(x => x.CPSReferenceId)
    .WithPaginatedFooter())