@model WorkOrder
@using MMSINC.Utilities

<fieldset>
    <fieldset>
        <legend>Additional Details</legend>
        <div class="field-column fc200">
            @Html.DisplayFor(x => x.TotalManHours)
            @Html.DisplayFor(x => x.LostWater)
            @Html.RenderDisplayTemplate("", @<text>@Html.Link("~/Content/LeakageChart.pdf", "Leakage Chart", new { target = "_blank" })</text>)
            @Html.DisplayFor(x => x.DistanceFromCrossStreet)
            @Html.DisplayFor(x => x.Notes)
            @Html.RenderDisplayTemplate("Other Links",
                @<text>
                    @Html.ActionLink("General", "Edit", "GeneralWorkOrder", new { id = Model.Id, area = "FieldOperations" }, new { Class = "link-button" })
                    @if (Model.CanBeFinalized)
                    {
                        @Html.ActionLink("Finalization", "Edit", "WorkOrderFinalization", new { id = Model.Id, area = "FieldOperations" }, new { Class = "link-button" })
                    }
                    @if (Model.CurrentCrew != null)
                    {
                        @Html.ActionLink("Crew Assignments", "ShowCalendar", "CrewAssignment", new { area = "FieldOperations", Crew = Model.CurrentCrew.Id, Date = DateTime.Now }, new { Class = "link-button" })
                    }
                 </text>)
        </div>
    </fieldset>
    @if (Model.AssetType.Id == AssetType.Indices.SERVICE)
    {
        <fieldset>
            <legend>Compliance Data</legend>
            <div class="container" style="margin-bottom: 10px;">
                @if (Model.RecentPitcherFilterDeliveryDate != null)
                {
                    @Html.DisplayInlineNotification(new MMSINC.Models.ViewModels.NotificationItem
                    {
                        Message = String.Format(WorkOrder.PITCHER_FILTER_DISTRIBUTED_MESSAGE, String.Format(CommonStringFormats.DATE, Model.RecentPitcherFilterDeliveryDate)),
                        NotificationType = MMSINC.Models.ViewModels.NotificationItemType.Warning
                    })
                }
            </div>
            <div class="field-column fc200">
                @Html.DisplayFor(x => x.InitialServiceLineFlushTime)
                @Html.RenderDisplayTemplate(Html.DisplayLabelFor(x => x.InitialFlushTimeEnteredBy),
                    @<text>
                        @if (Model.InitialFlushTimeEnteredBy != null)
                        {
                            @Model.InitialFlushTimeEnteredBy.FullName
                        }
                     </text>)
                @Html.DisplayFor(x => x.InitialFlushTimeEnteredAt)
                @Html.DisplayFor(x => x.HasPitcherFilterBeenProvidedToCustomer)
                @Html.DisplayFor(x => x.IsThisAMultiTenantFacility)
                @Html.DisplayFor(x => x.NumberOfPitcherFiltersDelivered)
                @Html.DisplayFor(x => x.DescribeWhichUnits)
                @Html.DisplayFor(x => x.DatePitcherFilterDeliveredToCustomer)
                @Html.DisplayFor(x => x.PitcherFilterCustomerDeliveryMethod)
                @Html.DisplayFor(x => x.PitcherFilterCustomerDeliveryOtherMethod)
                @Html.DisplayFor(x => x.DateCustomerProvidedAWStateLeadInformation)
            </div>
        </fieldset>
    }
</fieldset>