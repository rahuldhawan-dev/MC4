@model MapCallMVC.Areas.FieldOperations.Models.ViewModels.GeneralWorkOrder.EditWorkOrderAdditional

@{
	var displayMainBreakInfo = (Model.WorkOrder != null && Model.WorkOrder.IsMainBreak()) ? "" : "none";
	var displayOnlyWorkDescription = (Model.WorkOrder.WorkDescription != null && WorkDescription.SERVICE_LINE_INSTALLATIONS.Contains(Model.WorkOrder.WorkDescription.Id)) ||
	                                 Model.WorkOrder.ApprovedOn.HasValue;
}

@using (var form = Form.BeginForm("UpdateAdditional", "GeneralWorkOrder", "FieldOperations", new { Model.Id }))
{
	form.HtmlAttributes["id"] = "AdditionalDetailsForm";
	@Control.HiddenFor(m => m.WorkOrderPriority)
	@Control.HiddenFor(m => m.StreetOpeningPermitRequired)
	<fieldset>
		<legend>Additional Details</legend>
        <div class="field-column fc200">
            @Html.DisplayFor(x => x.WorkOrder.TotalManHours)
            @if (displayOnlyWorkDescription)
            {
                @Html.DisplayFor(x => x.WorkOrder.WorkDescription)
                @Control.HiddenFor(x => x.FinalWorkDescription).WithValue(Model.WorkOrder.WorkDescription.Id)
            }
            else
            {
                @Html.EditorFor(x => x.FinalWorkDescription)
            }
            <div id="mainBreakInfo" style="display: @displayMainBreakInfo">
                @Html.EditorFor(x => x.CustomerImpact)
                @Html.EditorFor(x => x.RepairTime)
                @Html.EditorFor(x => x.AlertIssued)
                @Html.EditorFor(x => x.TrafficImpact)
            </div>
            @Html.EditorFor(x => x.LostWater)
            @Html.RenderDisplayTemplate("", @<text>@Html.Link("~/Content/LeakageChart.pdf", "Leakage Chart", new { target = "_blank" })</text>)
            @Html.EditorFor(x => x.DistanceFromCrossStreet)
            @Html.DisplayFor(x => x.WorkOrder.Notes, new { DisplayName = "Current Notes" })
            @Html.EditorFor(x => x.AppendNotes)
            @Html.RenderDisplayTemplate("Other Links",
                    @<text>
                        @Html.ActionLink("General", "Edit", "GeneralWorkOrder", new { id = Model.Id, area = "FieldOperations" }, new { Class = "link-button" })
                        @if (Model.WorkOrder.CanBeFinalized)
                        {
	                        @Html.ActionLink("Finalization", "Edit", "WorkOrderFinalization", new { id = Model.Id, area = "FieldOperations" }, new { Class = "link-button"})
                        }
                        @if (Model.WorkOrder.CurrentCrew != null)
                        {
                            @Html.ActionLink("Crew Assignments", "ShowCalendar", "CrewAssignment", new { area = "FieldOperations", Crew = Model.WorkOrder.CurrentCrew.Id, Date = DateTime.Now }, new { Class = "link-button", id = "CrewAssignments" })
                        }
                    </text>)
            @Html.ButtonGroup(@<text>@Control.SubmitButton("Update Details").WithId("btnUpdateDetails")</text>)
        </div>
	</fieldset>
}