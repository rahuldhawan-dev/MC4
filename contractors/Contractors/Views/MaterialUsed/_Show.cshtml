@using MMSINC.Authentication
@using MMSINC.Metadata
@model MapCall.Common.Model.Entities.MaterialUsed
@{
    var isGeneralReadOnly = ViewData.ContainsKey("IsGeneralReadOnly") && (bool)ViewData["IsGeneralReadOnly"] == true;
}
<tr>
    @if (!isGeneralReadOnly)
    {
        <td>
            @Ajax.ActionLink("Edit", "Edit", "MaterialUsed", new { Model.Id }, new AjaxOptions { HttpMethod = "GET" })
            @{
                var meh = Ajax.SecureActionLink<ContractorUser>(_container.GetInstance<ISecureFormTokenService>(), _container.GetInstance<IAuthenticationService<ContractorUser>>().CurrentUser,
                    "Delete", "Destroy", "MaterialUsed", new { Model.Id }, new AjaxOptions {
                        HttpMethod = "DELETE",
                        Confirm = "Are you sure you want to delete this record?"
                    });
            }
            @meh
        </td>
    }

    @if (Model.Material != null)
    {
        <td>@Html.DisplayTextFor(x => x.Material.PartNumber)</td>
    }
    else
    {
        <td>n/a</td>
    }
    @if (Model.StockLocation != null)
    {
        <td>@Html.DisplayTextFor(x => x.StockLocation.Description)</td>
    }
    else
    {
        <td>n/a</td>
    }
    @if (Model.Material != null)
    {
        <td>@Html.DisplayTextFor(x => x.Material.Description)</td>
    }
    else
    {
        <td>@Html.DisplayTextFor(x => x.NonStockDescription)</td>
    }
    <td>@Html.DisplayTextFor(x => x.Quantity)</td>
</tr>